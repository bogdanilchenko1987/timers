{"mappings":"AAAA,IAAMA,OAAS,CACb,cACA,UACA,kBACA,aACA,cAEEC,YAAc,EACZC,KAAO,CACXC,SAAUC,SAASC,cAAc,kBACjCC,YAAaF,SAASC,cAAc,cACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,8BAKpC,SAASI,UACPR,aAAe,EACf,IAAMS,EAAWV,OAAOW,KAAI,SAAAC,G,OAASC,IAAID,E,IAEnBE,oBAAF,4BACjBC,kBAAe,IAElBC,qBAAqBN,GAErBO,iBAAiBP,E,CAGnB,SAASK,kBAAkBG,GACzBhB,KAAKI,YAAYa,YAAcD,C,CAGjC,SAASJ,oBAAoBI,GAC3BhB,KAAKK,cAAcY,YAAcD,C,CAGnC,SAASE,mBAAmBC,G,IAAET,EAAFS,EAAET,MAAOU,EAATD,EAASC,KAAMC,EAAfF,EAAepB,YACnCuB,EAAK,eAELC,OADAF,EAAY,iBAEZE,OADAb,EAAM,iBACDa,OAALH,EAAK,kBAEXpB,KAAKM,UAAUkB,mBAAmB,YAAaF,E,CAGjD,SAASR,qBAAqBW,GAC5BC,QAAQC,KAAKF,GAAgBG,MAAK,SAAAT,G,IAAGT,EAAKS,EAALT,MAAOU,EAAID,EAAJC,KAC1CP,kBAAkB,aAA6CU,OAA9Bb,EAAM,0BAA6Ba,OAALH,IAC5DF,mBAAgB,CAAER,QAAOU,OAAMrB,yB,IAItC,SAASgB,iBAAiBU,GACxBC,QAAQG,IAAIJ,GAAgBG,MAAK,W,OAC/BhB,oBAAoB,gC,IAIxB,SAASD,IAAID,GACX,OAAO,IAAIgB,SAAQ,SAAAI,GACjB,IAAMV,EAAOW,cAAc,IAAM,MACjCC,YAAW,WACTF,EAAQ,CAAEpB,QAAOU,Q,GAChBA,E,IAIP,SAASW,cAAcE,EAAKC,GAC1B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,E,CAtDtDjC,KAAKC,SAASqC,iBAAiB,QAAS/B","sources":["src/js/racetrack.js"],"sourcesContent":["const horses = [\n  'Secretariat',\n  'Eclipse',\n  'West Australian',\n  'Flying Fox',\n  'Seabiscuit',\n];\nlet raceCounter = 0;\nconst refs = {\n  startBtn: document.querySelector('.js-start-race'),\n  winnerField: document.querySelector('.js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tableBody: document.querySelector('.js-results-table > tbody'),\n};\n\nrefs.startBtn.addEventListener('click', onStart);\n\nfunction onStart() {\n  raceCounter += 1;\n  const promises = horses.map(horse => run(horse)); // const promises = horses.map(run); —Ç–µ –∂ —Å–∞–º–µ,–ø–µ—Ä–µ–¥–∞—î–º–æ –∫–æ–ª–±–µ–∫ run\n\n  updateProgressField('ü§ñ Race started, no bets');\n  updateWinnerField('');\n\n  determineWinnerHorse(promises);\n\n  waitForAllHorses(promises);\n}\n\nfunction updateWinnerField(message) {\n  refs.winnerField.textContent = message;\n}\n\nfunction updateProgressField(message) {\n  refs.progressField.textContent = message;\n}\n\nfunction updateResultsTable({ horse, time, raceCounter }) {\n  const tr = `<tr>\n  <td>${raceCounter}</td>\n  <td>${horse}</td>\n  <td>${time}</td>\n  </tr>`;\n  refs.tableBody.insertAdjacentHTML('beforeend', tr);\n}\n\nfunction determineWinnerHorse(horsesPromises) {\n  Promise.race(horsesPromises).then(({ horse, time }) => {\n    updateWinnerField(`üéâ Winner ${horse} finished with time - ${time}`);\n    updateResultsTable({ horse, time, raceCounter });\n  });\n}\n\nfunction waitForAllHorses(horsesPromises) {\n  Promise.all(horsesPromises).then(() =>\n    updateProgressField('üìù Race finish, bets are open')\n  );\n}\n\nfunction run(horse) {\n  return new Promise(resolve => {\n    const time = getRandomTime(2000, 3500);\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"],"names":["horses","raceCounter","refs","startBtn","document","querySelector","winnerField","progressField","tableBody","onStart","promises","map","horse","run","updateProgressField","updateWinnerField","determineWinnerHorse","waitForAllHorses","message","textContent","updateResultsTable","param","time","raceCounter1","tr","concat","insertAdjacentHTML","horsesPromises","Promise","race","then","all","resolve","getRandomTime","setTimeout","min","max","Math","floor","random","addEventListener"],"version":3,"file":"racetrack.b9600249.js.map"}